{"ast":null,"code":"/*!\n * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (name, definition) {\n  if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof define === 'function' && typeof define.amd === 'object') {\n    define(definition);\n  } else {\n    this[name] = definition();\n  }\n})('validator', function (validator) {\n  'use strict';\n\n  validator = {\n    version: '3.43.0'\n  };\n  var emailUser = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e])|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f])))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n  var emailUserUtf8 = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n  var displayName = /^(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\s)*<(.+)>$/i;\n  var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/;\n  var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n  var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/,\n      isbn13Maybe = /^(?:[0-9]{13})$/;\n  var ipv4Maybe = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/,\n      ipv6Block = /^[0-9A-F]{1,4}$/i;\n  var uuid = {\n    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n  };\n  var alpha = /^[A-Z]+$/i,\n      alphanumeric = /^[0-9A-Z]+$/i,\n      numeric = /^[-+]?[0-9]+$/,\n      int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/,\n      float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/,\n      hexadecimal = /^[0-9A-F]+$/i,\n      decimal = /^[-+]?[0-9]*(\\.[0-9]+)?$/,\n      hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\n  var ascii = /^[\\x00-\\x7F]+$/,\n      multibyte = /[^\\x00-\\x7F]/,\n      fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/,\n      halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n  var surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n  var base64 = /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i;\n  var phones = {\n    'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\n    'en-ZA': /^(\\+?27|0)\\d{9}$/,\n    'en-AU': /^(\\+?61|0)4\\d{8}$/,\n    'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n    'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n    'pt-PT': /^(\\+351)?9[1236]\\d{7}$/,\n    'el-GR': /^(\\+30)?((2\\d{9})|(69\\d{8}))$/,\n    'en-GB': /^(\\+?44|0)7\\d{9}$/,\n    'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n    'en-ZM': /^(\\+26)?09[567]\\d{7}$/,\n    'ru-RU': /^(\\+?7|8)?9\\d{9}$/\n  };\n\n  validator.extend = function (name, fn) {\n    validator[name] = function () {\n      var args = Array.prototype.slice.call(arguments);\n      args[0] = validator.toString(args[0]);\n      return fn.apply(validator, args);\n    };\n  }; //Right before exporting the validator object, pass each of the builtins\n  //through extend() so that their first argument is coerced to a string\n\n\n  validator.init = function () {\n    for (var name in validator) {\n      if (typeof validator[name] !== 'function' || name === 'toString' || name === 'toDate' || name === 'extend' || name === 'init') {\n        continue;\n      }\n\n      validator.extend(name, validator[name]);\n    }\n  };\n\n  validator.toString = function (input) {\n    if (typeof input === 'object' && input !== null && input.toString) {\n      input = input.toString();\n    } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n      input = '';\n    } else if (typeof input !== 'string') {\n      input += '';\n    }\n\n    return input;\n  };\n\n  validator.toDate = function (date) {\n    if (Object.prototype.toString.call(date) === '[object Date]') {\n      return date;\n    }\n\n    date = Date.parse(date);\n    return !isNaN(date) ? new Date(date) : null;\n  };\n\n  validator.toFloat = function (str) {\n    return parseFloat(str);\n  };\n\n  validator.toInt = function (str, radix) {\n    return parseInt(str, radix || 10);\n  };\n\n  validator.toBoolean = function (str, strict) {\n    if (strict) {\n      return str === '1' || str === 'true';\n    }\n\n    return str !== '0' && str !== 'false' && str !== '';\n  };\n\n  validator.equals = function (str, comparison) {\n    return str === validator.toString(comparison);\n  };\n\n  validator.contains = function (str, elem) {\n    return str.indexOf(validator.toString(elem)) >= 0;\n  };\n\n  validator.matches = function (str, pattern, modifiers) {\n    if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n\n    return pattern.test(str);\n  };\n\n  var default_email_options = {\n    allow_display_name: false,\n    allow_utf8_local_part: true,\n    require_tld: true\n  };\n\n  validator.isEmail = function (str, options) {\n    options = merge(options, default_email_options);\n\n    if (options.allow_display_name) {\n      var display_email = str.match(displayName);\n\n      if (display_email) {\n        str = display_email[1];\n      }\n    } else if (/\\s/.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('@'),\n        domain = parts.pop(),\n        user = parts.join('@');\n    var lower_domain = domain.toLowerCase();\n\n    if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n      user = user.replace(/\\./g, '').toLowerCase();\n    }\n\n    if (!validator.isFQDN(domain, {\n      require_tld: options.require_tld\n    })) {\n      return false;\n    }\n\n    return options.allow_utf8_local_part ? emailUserUtf8.test(user) : emailUser.test(user);\n  };\n\n  var default_url_options = {\n    protocols: ['http', 'https', 'ftp'],\n    require_tld: true,\n    require_protocol: false,\n    require_valid_protocol: true,\n    allow_underscores: false,\n    allow_trailing_dot: false,\n    allow_protocol_relative_urls: false\n  };\n\n  validator.isURL = function (url, options) {\n    if (!url || url.length >= 2083 || /\\s/.test(url)) {\n      return false;\n    }\n\n    if (url.indexOf('mailto:') === 0) {\n      return false;\n    }\n\n    options = merge(options, default_url_options);\n    var protocol, auth, host, hostname, port, port_str, split;\n    split = url.split('://');\n\n    if (split.length > 1) {\n      protocol = split.shift();\n\n      if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n        return false;\n      }\n    } else if (options.require_protocol) {\n      return false;\n    } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n      split[0] = url.substr(2);\n    }\n\n    url = split.join('://');\n    split = url.split('#');\n    url = split.shift();\n    split = url.split('?');\n    url = split.shift();\n    split = url.split('/');\n    url = split.shift();\n    split = url.split('@');\n\n    if (split.length > 1) {\n      auth = split.shift();\n\n      if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n        return false;\n      }\n    }\n\n    hostname = split.join('@');\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n      port = parseInt(port_str, 10);\n\n      if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n        return false;\n      }\n    }\n\n    if (!validator.isIP(host) && !validator.isFQDN(host, options) && host !== 'localhost') {\n      return false;\n    }\n\n    if (options.host_whitelist && options.host_whitelist.indexOf(host) === -1) {\n      return false;\n    }\n\n    if (options.host_blacklist && options.host_blacklist.indexOf(host) !== -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  validator.isIP = function (str, version) {\n    version = validator.toString(version);\n\n    if (!version) {\n      return validator.isIP(str, 4) || validator.isIP(str, 6);\n    } else if (version === '4') {\n      if (!ipv4Maybe.test(str)) {\n        return false;\n      }\n\n      var parts = str.split('.').sort(function (a, b) {\n        return a - b;\n      });\n      return parts[3] <= 255;\n    } else if (version === '6') {\n      var blocks = str.split(':');\n      var foundOmissionBlock = false; // marker to indicate ::\n      // At least some OS accept the last 32 bits of an IPv6 address\n      // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n      // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n      // and '::a.b.c.d' is deprecated, but also valid.\n\n      var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);\n      var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n      if (blocks.length > expectedNumberOfBlocks) return false; // initial or final ::\n\n      if (str === '::') {\n        return true;\n      } else if (str.substr(0, 2) === '::') {\n        blocks.shift();\n        blocks.shift();\n        foundOmissionBlock = true;\n      } else if (str.substr(str.length - 2) === '::') {\n        blocks.pop();\n        blocks.pop();\n        foundOmissionBlock = true;\n      }\n\n      for (var i = 0; i < blocks.length; ++i) {\n        // test for a :: which can not be at the string start/end\n        // since those cases have been handled above\n        if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\n          if (foundOmissionBlock) return false; // multiple :: in address\n\n          foundOmissionBlock = true;\n        } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {// it has been checked before that the last\n          // block is a valid IPv4 address\n        } else if (!ipv6Block.test(blocks[i])) {\n          return false;\n        }\n      }\n\n      if (foundOmissionBlock) {\n        return blocks.length >= 1;\n      } else {\n        return blocks.length === expectedNumberOfBlocks;\n      }\n    }\n\n    return false;\n  };\n\n  var default_fqdn_options = {\n    require_tld: true,\n    allow_underscores: false,\n    allow_trailing_dot: false\n  };\n\n  validator.isFQDN = function (str, options) {\n    options = merge(options, default_fqdn_options);\n    /* Remove the optional trailing dot before checking validity */\n\n    if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n      str = str.substring(0, str.length - 1);\n    }\n\n    var parts = str.split('.');\n\n    if (options.require_tld) {\n      var tld = parts.pop();\n\n      if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n        return false;\n      }\n    }\n\n    for (var part, i = 0; i < parts.length; i++) {\n      part = parts[i];\n\n      if (options.allow_underscores) {\n        if (part.indexOf('__') >= 0) {\n          return false;\n        }\n\n        part = part.replace(/_/g, '');\n      }\n\n      if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n        return false;\n      }\n\n      if (part[0] === '-' || part[part.length - 1] === '-' || part.indexOf('---') >= 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  validator.isBoolean = function (str) {\n    return ['true', 'false', '1', '0'].indexOf(str) >= 0;\n  };\n\n  validator.isAlpha = function (str) {\n    return alpha.test(str);\n  };\n\n  validator.isAlphanumeric = function (str) {\n    return alphanumeric.test(str);\n  };\n\n  validator.isNumeric = function (str) {\n    return numeric.test(str);\n  };\n\n  validator.isDecimal = function (str) {\n    return decimal.test(str);\n  };\n\n  validator.isHexadecimal = function (str) {\n    return hexadecimal.test(str);\n  };\n\n  validator.isHexColor = function (str) {\n    return hexcolor.test(str);\n  };\n\n  validator.isLowercase = function (str) {\n    return str === str.toLowerCase();\n  };\n\n  validator.isUppercase = function (str) {\n    return str === str.toUpperCase();\n  };\n\n  validator.isInt = function (str, options) {\n    options = options || {};\n    return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n  };\n\n  validator.isFloat = function (str, options) {\n    options = options || {};\n    return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n  };\n\n  validator.isDivisibleBy = function (str, num) {\n    return validator.toFloat(str) % validator.toInt(num) === 0;\n  };\n\n  validator.isNull = function (str) {\n    return str.length === 0;\n  };\n\n  validator.isLength = function (str, min, max) {\n    var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n    var len = str.length - surrogatePairs.length;\n    return len >= min && (typeof max === 'undefined' || len <= max);\n  };\n\n  validator.isByteLength = function (str, min, max) {\n    return str.length >= min && (typeof max === 'undefined' || str.length <= max);\n  };\n\n  validator.isUUID = function (str, version) {\n    var pattern = uuid[version ? version : 'all'];\n    return pattern && pattern.test(str);\n  };\n\n  validator.isDate = function (str) {\n    return !isNaN(Date.parse(str));\n  };\n\n  validator.isAfter = function (str, date) {\n    var comparison = validator.toDate(date || new Date()),\n        original = validator.toDate(str);\n    return !!(original && comparison && original > comparison);\n  };\n\n  validator.isBefore = function (str, date) {\n    var comparison = validator.toDate(date || new Date()),\n        original = validator.toDate(str);\n    return original && comparison && original < comparison;\n  };\n\n  validator.isIn = function (str, options) {\n    var i;\n\n    if (Object.prototype.toString.call(options) === '[object Array]') {\n      var array = [];\n\n      for (i in options) {\n        array[i] = validator.toString(options[i]);\n      }\n\n      return array.indexOf(str) >= 0;\n    } else if (typeof options === 'object') {\n      return options.hasOwnProperty(str);\n    } else if (options && typeof options.indexOf === 'function') {\n      return options.indexOf(str) >= 0;\n    }\n\n    return false;\n  };\n\n  validator.isCreditCard = function (str) {\n    var sanitized = str.replace(/[^0-9]+/g, '');\n\n    if (!creditCard.test(sanitized)) {\n      return false;\n    }\n\n    var sum = 0,\n        digit,\n        tmpNum,\n        shouldDouble;\n\n    for (var i = sanitized.length - 1; i >= 0; i--) {\n      digit = sanitized.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n\n      if (shouldDouble) {\n        tmpNum *= 2;\n\n        if (tmpNum >= 10) {\n          sum += tmpNum % 10 + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n\n      shouldDouble = !shouldDouble;\n    }\n\n    return !!(sum % 10 === 0 ? sanitized : false);\n  };\n\n  validator.isISIN = function (str) {\n    if (!isin.test(str)) {\n      return false;\n    }\n\n    var checksumStr = str.replace(/[A-Z]/g, function (character) {\n      return parseInt(character, 36);\n    });\n    var sum = 0,\n        digit,\n        tmpNum,\n        shouldDouble = true;\n\n    for (var i = checksumStr.length - 2; i >= 0; i--) {\n      digit = checksumStr.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n\n      if (shouldDouble) {\n        tmpNum *= 2;\n\n        if (tmpNum >= 10) {\n          sum += tmpNum + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n\n      shouldDouble = !shouldDouble;\n    }\n\n    return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n  };\n\n  validator.isISBN = function (str, version) {\n    version = validator.toString(version);\n\n    if (!version) {\n      return validator.isISBN(str, 10) || validator.isISBN(str, 13);\n    }\n\n    var sanitized = str.replace(/[\\s-]+/g, ''),\n        checksum = 0,\n        i;\n\n    if (version === '10') {\n      if (!isbn10Maybe.test(sanitized)) {\n        return false;\n      }\n\n      for (i = 0; i < 9; i++) {\n        checksum += (i + 1) * sanitized.charAt(i);\n      }\n\n      if (sanitized.charAt(9) === 'X') {\n        checksum += 10 * 10;\n      } else {\n        checksum += 10 * sanitized.charAt(9);\n      }\n\n      if (checksum % 11 === 0) {\n        return !!sanitized;\n      }\n    } else if (version === '13') {\n      if (!isbn13Maybe.test(sanitized)) {\n        return false;\n      }\n\n      var factor = [1, 3];\n\n      for (i = 0; i < 12; i++) {\n        checksum += factor[i % 2] * sanitized.charAt(i);\n      }\n\n      if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n        return !!sanitized;\n      }\n    }\n\n    return false;\n  };\n\n  validator.isMobilePhone = function (str, locale) {\n    if (locale in phones) {\n      return phones[locale].test(str);\n    }\n\n    return false;\n  };\n\n  var default_currency_options = {\n    symbol: '$',\n    require_symbol: false,\n    allow_space_after_symbol: false,\n    symbol_after_digits: false,\n    allow_negatives: true,\n    parens_for_negatives: false,\n    negative_sign_before_digits: false,\n    negative_sign_after_digits: false,\n    allow_negative_sign_placeholder: false,\n    thousands_separator: ',',\n    decimal_separator: '.',\n    allow_space_after_digits: false\n  };\n\n  validator.isCurrency = function (str, options) {\n    options = merge(options, default_currency_options);\n    return currencyRegex(options).test(str);\n  };\n\n  validator.isJSON = function (str) {\n    try {\n      var obj = JSON.parse(str);\n      return !!obj && typeof obj === 'object';\n    } catch (e) {}\n\n    return false;\n  };\n\n  validator.isMultibyte = function (str) {\n    return multibyte.test(str);\n  };\n\n  validator.isAscii = function (str) {\n    return ascii.test(str);\n  };\n\n  validator.isFullWidth = function (str) {\n    return fullWidth.test(str);\n  };\n\n  validator.isHalfWidth = function (str) {\n    return halfWidth.test(str);\n  };\n\n  validator.isVariableWidth = function (str) {\n    return fullWidth.test(str) && halfWidth.test(str);\n  };\n\n  validator.isSurrogatePair = function (str) {\n    return surrogatePair.test(str);\n  };\n\n  validator.isBase64 = function (str) {\n    return base64.test(str);\n  };\n\n  validator.isMongoId = function (str) {\n    return validator.isHexadecimal(str) && str.length === 24;\n  };\n\n  validator.ltrim = function (str, chars) {\n    var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\n    return str.replace(pattern, '');\n  };\n\n  validator.rtrim = function (str, chars) {\n    var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\\s+$/g;\n    return str.replace(pattern, '');\n  };\n\n  validator.trim = function (str, chars) {\n    var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\\s+|\\s+$/g;\n    return str.replace(pattern, '');\n  };\n\n  validator.escape = function (str) {\n    return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\`/g, '&#96;');\n  };\n\n  validator.stripLow = function (str, keep_new_lines) {\n    var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n    return validator.blacklist(str, chars);\n  };\n\n  validator.whitelist = function (str, chars) {\n    return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n  };\n\n  validator.blacklist = function (str, chars) {\n    return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\n  };\n\n  var default_normalize_email_options = {\n    lowercase: true\n  };\n\n  validator.normalizeEmail = function (email, options) {\n    options = merge(options, default_normalize_email_options);\n\n    if (!validator.isEmail(email)) {\n      return false;\n    }\n\n    var parts = email.split('@', 2);\n    parts[1] = parts[1].toLowerCase();\n\n    if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n      parts[0] = parts[0].toLowerCase().replace(/\\./g, '');\n\n      if (parts[0][0] === '+') {\n        return false;\n      }\n\n      parts[0] = parts[0].split('+')[0];\n      parts[1] = 'gmail.com';\n    } else if (options.lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n\n    return parts.join('@');\n  };\n\n  function merge(obj, defaults) {\n    obj = obj || {};\n\n    for (var key in defaults) {\n      if (typeof obj[key] === 'undefined') {\n        obj[key] = defaults[key];\n      }\n    }\n\n    return obj;\n  }\n\n  function currencyRegex(options) {\n    var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\n        negative = '-?',\n        whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n        whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\n        valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n        whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\n        decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\n    var pattern = whole_dollar_amount + decimal_amount; // default is negative sign before symbol, but there are two other options (besides parens)\n\n    if (options.allow_negatives && !options.parens_for_negatives) {\n      if (options.negative_sign_after_digits) {\n        pattern += negative;\n      } else if (options.negative_sign_before_digits) {\n        pattern = negative + pattern;\n      }\n    } // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n\n\n    if (options.allow_negative_sign_placeholder) {\n      pattern = '( (?!\\\\-))?' + pattern;\n    } else if (options.allow_space_after_symbol) {\n      pattern = ' ?' + pattern;\n    } else if (options.allow_space_after_digits) {\n      pattern += '( (?!$))?';\n    }\n\n    if (options.symbol_after_digits) {\n      pattern += symbol;\n    } else {\n      pattern = symbol + pattern;\n    }\n\n    if (options.allow_negatives) {\n      if (options.parens_for_negatives) {\n        pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n      } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n        pattern = negative + pattern;\n      }\n    }\n\n    return new RegExp('^' + // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space\n    '(?!-? )(?=.*\\\\d)' + pattern + '$');\n  }\n\n  validator.init();\n  return validator;\n});","map":{"version":3,"sources":["/Users/victoriablackburn/TripStagram/client/node_modules/validator/validator.js"],"names":["name","definition","exports","module","define","amd","validator","version","emailUser","emailUserUtf8","displayName","creditCard","isin","isbn10Maybe","isbn13Maybe","ipv4Maybe","ipv6Block","uuid","all","alpha","alphanumeric","numeric","int","float","hexadecimal","decimal","hexcolor","ascii","multibyte","fullWidth","halfWidth","surrogatePair","base64","phones","extend","fn","args","Array","prototype","slice","call","arguments","toString","apply","init","input","isNaN","length","toDate","date","Object","Date","parse","toFloat","str","parseFloat","toInt","radix","parseInt","toBoolean","strict","equals","comparison","contains","elem","indexOf","matches","pattern","modifiers","RegExp","test","default_email_options","allow_display_name","allow_utf8_local_part","require_tld","isEmail","options","merge","display_email","match","parts","split","domain","pop","user","join","lower_domain","toLowerCase","replace","isFQDN","default_url_options","protocols","require_protocol","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","isURL","url","protocol","auth","host","hostname","port","port_str","shift","substr","isIP","host_whitelist","host_blacklist","sort","a","b","blocks","foundOmissionBlock","foundIPv4TransitionBlock","expectedNumberOfBlocks","i","default_fqdn_options","substring","tld","part","isBoolean","isAlpha","isAlphanumeric","isNumeric","isDecimal","isHexadecimal","isHexColor","isLowercase","isUppercase","toUpperCase","isInt","hasOwnProperty","min","max","isFloat","isDivisibleBy","num","isNull","isLength","surrogatePairs","len","isByteLength","isUUID","isDate","isAfter","original","isBefore","isIn","array","isCreditCard","sanitized","sum","digit","tmpNum","shouldDouble","isISIN","checksumStr","character","isISBN","checksum","charAt","factor","isMobilePhone","locale","default_currency_options","symbol","require_symbol","allow_space_after_symbol","symbol_after_digits","allow_negatives","parens_for_negatives","negative_sign_before_digits","negative_sign_after_digits","allow_negative_sign_placeholder","thousands_separator","decimal_separator","allow_space_after_digits","isCurrency","currencyRegex","isJSON","obj","JSON","e","isMultibyte","isAscii","isFullWidth","isHalfWidth","isVariableWidth","isSurrogatePair","isBase64","isMongoId","ltrim","chars","rtrim","trim","escape","stripLow","keep_new_lines","blacklist","whitelist","default_normalize_email_options","lowercase","normalizeEmail","email","defaults","key","negative","whole_dollar_amount_without_sep","whole_dollar_amount_with_sep","valid_whole_dollar_amounts","whole_dollar_amount","decimal_amount"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n(function (name, definition) {\n    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n        module.exports = definition();\n    } else if (typeof define === 'function' && typeof define.amd === 'object') {\n        define(definition);\n    } else {\n        this[name] = definition();\n    }\n})('validator', function (validator) {\n\n    'use strict';\n\n    validator = { version: '3.43.0' };\n\n    var emailUser = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e])|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f])))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n\n    var emailUserUtf8 = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))$/i;\n\n    var displayName = /^(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(?:[a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\s)*<(.+)>$/i;\n\n    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/;\n\n    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\n    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/\n      , isbn13Maybe = /^(?:[0-9]{13})$/;\n\n    var ipv4Maybe = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/\n      , ipv6Block = /^[0-9A-F]{1,4}$/i;\n\n    var uuid = {\n        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i\n      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n    };\n\n    var alpha = /^[A-Z]+$/i\n      , alphanumeric = /^[0-9A-Z]+$/i\n      , numeric = /^[-+]?[0-9]+$/\n      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/\n      , float = /^(?:[-+]?(?:[0-9]+))?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/\n      , hexadecimal = /^[0-9A-F]+$/i\n      , decimal = /^[-+]?[0-9]*(\\.[0-9]+)?$/\n      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\n\n    var ascii = /^[\\x00-\\x7F]+$/\n      , multibyte = /[^\\x00-\\x7F]/\n      , fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/\n      , halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\n    var surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\n    var base64 = /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i;\n\n    var phones = {\n      'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\n      'en-ZA': /^(\\+?27|0)\\d{9}$/,\n      'en-AU': /^(\\+?61|0)4\\d{8}$/,\n      'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n      'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n      'pt-PT': /^(\\+351)?9[1236]\\d{7}$/,\n      'el-GR': /^(\\+30)?((2\\d{9})|(69\\d{8}))$/,\n      'en-GB': /^(\\+?44|0)7\\d{9}$/,\n      'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n      'en-ZM': /^(\\+26)?09[567]\\d{7}$/,\n      'ru-RU': /^(\\+?7|8)?9\\d{9}$/\n    };\n\n    validator.extend = function (name, fn) {\n        validator[name] = function () {\n            var args = Array.prototype.slice.call(arguments);\n            args[0] = validator.toString(args[0]);\n            return fn.apply(validator, args);\n        };\n    };\n\n    //Right before exporting the validator object, pass each of the builtins\n    //through extend() so that their first argument is coerced to a string\n    validator.init = function () {\n        for (var name in validator) {\n            if (typeof validator[name] !== 'function' || name === 'toString' ||\n                    name === 'toDate' || name === 'extend' || name === 'init') {\n                continue;\n            }\n            validator.extend(name, validator[name]);\n        }\n    };\n\n    validator.toString = function (input) {\n        if (typeof input === 'object' && input !== null && input.toString) {\n            input = input.toString();\n        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {\n            input = '';\n        } else if (typeof input !== 'string') {\n            input += '';\n        }\n        return input;\n    };\n\n    validator.toDate = function (date) {\n        if (Object.prototype.toString.call(date) === '[object Date]') {\n            return date;\n        }\n        date = Date.parse(date);\n        return !isNaN(date) ? new Date(date) : null;\n    };\n\n    validator.toFloat = function (str) {\n        return parseFloat(str);\n    };\n\n    validator.toInt = function (str, radix) {\n        return parseInt(str, radix || 10);\n    };\n\n    validator.toBoolean = function (str, strict) {\n        if (strict) {\n            return str === '1' || str === 'true';\n        }\n        return str !== '0' && str !== 'false' && str !== '';\n    };\n\n    validator.equals = function (str, comparison) {\n        return str === validator.toString(comparison);\n    };\n\n    validator.contains = function (str, elem) {\n        return str.indexOf(validator.toString(elem)) >= 0;\n    };\n\n    validator.matches = function (str, pattern, modifiers) {\n        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n            pattern = new RegExp(pattern, modifiers);\n        }\n        return pattern.test(str);\n    };\n\n    var default_email_options = {\n        allow_display_name: false,\n        allow_utf8_local_part: true,\n        require_tld: true\n    };\n\n    validator.isEmail = function (str, options) {\n        options = merge(options, default_email_options);\n\n        if (options.allow_display_name) {\n            var display_email = str.match(displayName);\n            if (display_email) {\n                str = display_email[1];\n            }\n        } else if (/\\s/.test(str)) {\n            return false;\n        }\n\n        var parts = str.split('@')\n          , domain = parts.pop()\n          , user = parts.join('@');\n\n        var lower_domain = domain.toLowerCase();\n        if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n            user = user.replace(/\\./g, '').toLowerCase();\n        }\n\n        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {\n            return false;\n        }\n\n        return options.allow_utf8_local_part ?\n            emailUserUtf8.test(user) :\n            emailUser.test(user);\n    };\n\n    var default_url_options = {\n        protocols: [ 'http', 'https', 'ftp' ]\n      , require_tld: true\n      , require_protocol: false\n      , require_valid_protocol: true\n      , allow_underscores: false\n      , allow_trailing_dot: false\n      , allow_protocol_relative_urls: false\n    };\n\n    validator.isURL = function (url, options) {\n        if (!url || url.length >= 2083 || /\\s/.test(url)) {\n            return false;\n        }\n        if (url.indexOf('mailto:') === 0) {\n            return false;\n        }\n        options = merge(options, default_url_options);\n        var protocol, auth, host, hostname, port,\n            port_str, split;\n        split = url.split('://');\n        if (split.length > 1) {\n            protocol = split.shift();\n            if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n                return false;\n            }\n        } else if (options.require_protocol) {\n            return false;\n        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n            split[0] = url.substr(2);\n        }\n        url = split.join('://');\n        split = url.split('#');\n        url = split.shift();\n\n        split = url.split('?');\n        url = split.shift();\n\n        split = url.split('/');\n        url = split.shift();\n        split = url.split('@');\n        if (split.length > 1) {\n            auth = split.shift();\n            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n                return false;\n            }\n        }\n        hostname = split.join('@');\n        split = hostname.split(':');\n        host = split.shift();\n        if (split.length) {\n            port_str = split.join(':');\n            port = parseInt(port_str, 10);\n            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n                return false;\n            }\n        }\n        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&\n                host !== 'localhost') {\n            return false;\n        }\n        if (options.host_whitelist &&\n                options.host_whitelist.indexOf(host) === -1) {\n            return false;\n        }\n        if (options.host_blacklist &&\n                options.host_blacklist.indexOf(host) !== -1) {\n            return false;\n        }\n        return true;\n    };\n\n    validator.isIP = function (str, version) {\n        version = validator.toString(version);\n        if (!version) {\n            return validator.isIP(str, 4) || validator.isIP(str, 6);\n        } else if (version === '4') {\n            if (!ipv4Maybe.test(str)) {\n                return false;\n            }\n            var parts = str.split('.').sort(function (a, b) {\n                return a - b;\n            });\n            return parts[3] <= 255;\n        } else if (version === '6') {\n            var blocks = str.split(':');\n            var foundOmissionBlock = false; // marker to indicate ::\n\n            // At least some OS accept the last 32 bits of an IPv6 address\n            // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n            // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n            // and '::a.b.c.d' is deprecated, but also valid.\n            var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);\n            var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n\n            if (blocks.length > expectedNumberOfBlocks)\n                return false;\n\n            // initial or final ::\n            if (str === '::') {\n                return true;\n            } else if (str.substr(0, 2) === '::') {\n                blocks.shift();\n                blocks.shift();\n                foundOmissionBlock = true;\n            } else if (str.substr(str.length - 2) === '::') {\n                blocks.pop();\n                blocks.pop();\n                foundOmissionBlock = true;\n            }\n\n            for (var i = 0; i < blocks.length; ++i) {\n                // test for a :: which can not be at the string start/end\n                // since those cases have been handled above\n                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {\n                    if (foundOmissionBlock)\n                        return false; // multiple :: in address\n                    foundOmissionBlock = true;\n                } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {\n                    // it has been checked before that the last\n                    // block is a valid IPv4 address\n                } else if (!ipv6Block.test(blocks[i])) {\n                    return false;\n                }\n            }\n\n            if (foundOmissionBlock) {\n                return blocks.length >= 1;\n            } else {\n                return blocks.length === expectedNumberOfBlocks;\n            }\n        }\n        return false;\n    };\n\n    var default_fqdn_options = {\n        require_tld: true\n      , allow_underscores: false\n      , allow_trailing_dot: false\n    };\n\n    validator.isFQDN = function (str, options) {\n        options = merge(options, default_fqdn_options);\n\n        /* Remove the optional trailing dot before checking validity */\n        if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n            str = str.substring(0, str.length - 1);\n        }\n        var parts = str.split('.');\n        if (options.require_tld) {\n            var tld = parts.pop();\n            if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n                return false;\n            }\n        }\n        for (var part, i = 0; i < parts.length; i++) {\n            part = parts[i];\n            if (options.allow_underscores) {\n                if (part.indexOf('__') >= 0) {\n                    return false;\n                }\n                part = part.replace(/_/g, '');\n            }\n            if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n                return false;\n            }\n            if (part[0] === '-' || part[part.length - 1] === '-' ||\n                    part.indexOf('---') >= 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    validator.isBoolean = function(str) {\n        return (['true', 'false', '1', '0'].indexOf(str) >= 0);\n    };\n\n    validator.isAlpha = function (str) {\n        return alpha.test(str);\n    };\n\n    validator.isAlphanumeric = function (str) {\n        return alphanumeric.test(str);\n    };\n\n    validator.isNumeric = function (str) {\n        return numeric.test(str);\n    };\n    \n    validator.isDecimal = function (str) {\n        return decimal.test(str);\n    };\n\n    validator.isHexadecimal = function (str) {\n        return hexadecimal.test(str);\n    };\n\n    validator.isHexColor = function (str) {\n        return hexcolor.test(str);\n    };\n\n    validator.isLowercase = function (str) {\n        return str === str.toLowerCase();\n    };\n\n    validator.isUppercase = function (str) {\n        return str === str.toUpperCase();\n    };\n\n    validator.isInt = function (str, options) {\n        options = options || {};\n        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n    };\n\n    validator.isFloat = function (str, options) {\n        options = options || {};\n        return str !== '' && float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);\n    };\n\n    validator.isDivisibleBy = function (str, num) {\n        return validator.toFloat(str) % validator.toInt(num) === 0;\n    };\n\n    validator.isNull = function (str) {\n        return str.length === 0;\n    };\n\n    validator.isLength = function (str, min, max) {\n        var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n        var len = str.length - surrogatePairs.length;\n        return len >= min && (typeof max === 'undefined' || len <= max);\n    };\n\n    validator.isByteLength = function (str, min, max) {\n        return str.length >= min && (typeof max === 'undefined' || str.length <= max);\n    };\n\n    validator.isUUID = function (str, version) {\n        var pattern = uuid[version ? version : 'all'];\n        return pattern && pattern.test(str);\n    };\n\n    validator.isDate = function (str) {\n        return !isNaN(Date.parse(str));\n    };\n\n    validator.isAfter = function (str, date) {\n        var comparison = validator.toDate(date || new Date())\n          , original = validator.toDate(str);\n        return !!(original && comparison && original > comparison);\n    };\n\n    validator.isBefore = function (str, date) {\n        var comparison = validator.toDate(date || new Date())\n          , original = validator.toDate(str);\n        return original && comparison && original < comparison;\n    };\n\n    validator.isIn = function (str, options) {\n        var i;\n        if (Object.prototype.toString.call(options) === '[object Array]') {\n            var array = [];\n            for (i in options) {\n                array[i] = validator.toString(options[i]);\n            }\n            return array.indexOf(str) >= 0;\n        } else if (typeof options === 'object') {\n            return options.hasOwnProperty(str);\n        } else if (options && typeof options.indexOf === 'function') {\n            return options.indexOf(str) >= 0;\n        }\n        return false;\n    };\n\n    validator.isCreditCard = function (str) {\n        var sanitized = str.replace(/[^0-9]+/g, '');\n        if (!creditCard.test(sanitized)) {\n            return false;\n        }\n        var sum = 0, digit, tmpNum, shouldDouble;\n        for (var i = sanitized.length - 1; i >= 0; i--) {\n            digit = sanitized.substring(i, (i + 1));\n            tmpNum = parseInt(digit, 10);\n            if (shouldDouble) {\n                tmpNum *= 2;\n                if (tmpNum >= 10) {\n                    sum += ((tmpNum % 10) + 1);\n                } else {\n                    sum += tmpNum;\n                }\n            } else {\n                sum += tmpNum;\n            }\n            shouldDouble = !shouldDouble;\n        }\n        return !!((sum % 10) === 0 ? sanitized : false);\n    };\n\n    validator.isISIN = function (str) {\n        if (!isin.test(str)) {\n            return false;\n        }\n\n        var checksumStr = str.replace(/[A-Z]/g, function(character) {\n            return parseInt(character, 36);\n        });\n\n        var sum = 0, digit, tmpNum, shouldDouble = true;\n        for (var i = checksumStr.length - 2; i >= 0; i--) {\n            digit = checksumStr.substring(i, (i + 1));\n            tmpNum = parseInt(digit, 10);\n            if (shouldDouble) {\n                tmpNum *= 2;\n                if (tmpNum >= 10) {\n                    sum += tmpNum + 1;\n                } else {\n                    sum += tmpNum;\n                }\n            } else {\n                sum += tmpNum;\n            }\n            shouldDouble = !shouldDouble;\n        }\n\n        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n    };\n\n    validator.isISBN = function (str, version) {\n        version = validator.toString(version);\n        if (!version) {\n            return validator.isISBN(str, 10) || validator.isISBN(str, 13);\n        }\n        var sanitized = str.replace(/[\\s-]+/g, '')\n          , checksum = 0, i;\n        if (version === '10') {\n            if (!isbn10Maybe.test(sanitized)) {\n                return false;\n            }\n            for (i = 0; i < 9; i++) {\n                checksum += (i + 1) * sanitized.charAt(i);\n            }\n            if (sanitized.charAt(9) === 'X') {\n                checksum += 10 * 10;\n            } else {\n                checksum += 10 * sanitized.charAt(9);\n            }\n            if ((checksum % 11) === 0) {\n                return !!sanitized;\n            }\n        } else  if (version === '13') {\n            if (!isbn13Maybe.test(sanitized)) {\n                return false;\n            }\n            var factor = [ 1, 3 ];\n            for (i = 0; i < 12; i++) {\n                checksum += factor[i % 2] * sanitized.charAt(i);\n            }\n            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {\n                return !!sanitized;\n            }\n        }\n        return false;\n    };\n\n    validator.isMobilePhone = function(str, locale) {\n        if (locale in phones) {\n            return phones[locale].test(str);\n        }\n        return false;\n    };\n\n    var default_currency_options = {\n        symbol: '$'\n      , require_symbol: false\n      , allow_space_after_symbol: false\n      , symbol_after_digits: false\n      , allow_negatives: true\n      , parens_for_negatives: false\n      , negative_sign_before_digits: false\n      , negative_sign_after_digits: false\n      , allow_negative_sign_placeholder: false\n      , thousands_separator: ','\n      , decimal_separator: '.'\n      , allow_space_after_digits: false\n    };\n\n    validator.isCurrency = function (str, options) {\n        options = merge(options, default_currency_options);\n\n        return currencyRegex(options).test(str);\n    };\n\n    validator.isJSON = function (str) {\n        try {\n            var obj = JSON.parse(str);\n            return !!obj && typeof obj === 'object';\n        } catch (e) {}\n        return false;\n    };\n\n    validator.isMultibyte = function (str) {\n        return multibyte.test(str);\n    };\n\n    validator.isAscii = function (str) {\n        return ascii.test(str);\n    };\n\n    validator.isFullWidth = function (str) {\n        return fullWidth.test(str);\n    };\n\n    validator.isHalfWidth = function (str) {\n        return halfWidth.test(str);\n    };\n\n    validator.isVariableWidth = function (str) {\n        return fullWidth.test(str) && halfWidth.test(str);\n    };\n\n    validator.isSurrogatePair = function (str) {\n        return surrogatePair.test(str);\n    };\n\n    validator.isBase64 = function (str) {\n        return base64.test(str);\n    };\n\n    validator.isMongoId = function (str) {\n        return validator.isHexadecimal(str) && str.length === 24;\n    };\n\n    validator.ltrim = function (str, chars) {\n        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.rtrim = function (str, chars) {\n        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\\s+$/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.trim = function (str, chars) {\n        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\\s+|\\s+$/g;\n        return str.replace(pattern, '');\n    };\n\n    validator.escape = function (str) {\n        return (str.replace(/&/g, '&amp;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#x27;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\\//g, '&#x2F;')\n            .replace(/\\`/g, '&#96;'));\n    };\n\n    validator.stripLow = function (str, keep_new_lines) {\n        var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n        return validator.blacklist(str, chars);\n    };\n\n    validator.whitelist = function (str, chars) {\n        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n    };\n\n    validator.blacklist = function (str, chars) {\n        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\n    };\n\n    var default_normalize_email_options = {\n        lowercase: true\n    };\n\n    validator.normalizeEmail = function (email, options) {\n        options = merge(options, default_normalize_email_options);\n        if (!validator.isEmail(email)) {\n            return false;\n        }\n        var parts = email.split('@', 2);\n        parts[1] = parts[1].toLowerCase();\n        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n            parts[0] = parts[0].toLowerCase().replace(/\\./g, '');\n            if (parts[0][0] === '+') {\n                return false;\n            }\n            parts[0] = parts[0].split('+')[0];\n            parts[1] = 'gmail.com';\n        } else if (options.lowercase) {\n            parts[0] = parts[0].toLowerCase();\n        }\n        return parts.join('@');\n    };\n\n    function merge(obj, defaults) {\n        obj = obj || {};\n        for (var key in defaults) {\n            if (typeof obj[key] === 'undefined') {\n                obj[key] = defaults[key];\n            }\n        }\n        return obj;\n    }\n\n    function currencyRegex(options) {\n        var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?')\n            , negative = '-?'\n            , whole_dollar_amount_without_sep = '[1-9]\\\\d*'\n            , whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*'\n            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]\n            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'\n            , decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\n        var pattern = whole_dollar_amount + decimal_amount;\n        // default is negative sign before symbol, but there are two other options (besides parens)\n        if (options.allow_negatives && !options.parens_for_negatives) {\n            if (options.negative_sign_after_digits) {\n                pattern += negative;\n            }\n            else if (options.negative_sign_before_digits) {\n                pattern = negative + pattern;\n            }\n        }\n        // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n        if (options.allow_negative_sign_placeholder) {\n            pattern = '( (?!\\\\-))?' + pattern;\n        }\n        else if (options.allow_space_after_symbol) {\n            pattern = ' ?' + pattern;\n        }\n        else if (options.allow_space_after_digits) {\n            pattern += '( (?!$))?';\n        }\n        if (options.symbol_after_digits) {\n            pattern += symbol;\n        } else {\n            pattern = symbol + pattern;\n        }\n        if (options.allow_negatives) {\n            if (options.parens_for_negatives) {\n                pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n            }\n            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n                pattern = negative + pattern;\n            }\n        }\n        return new RegExp(\n            '^' +\n            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space\n            '(?!-? )(?=.*\\\\d)' +\n            pattern +\n            '$'\n        );\n    }\n\n    validator.init();\n\n    return validator;\n\n});\n"]},"metadata":{},"sourceType":"script"}
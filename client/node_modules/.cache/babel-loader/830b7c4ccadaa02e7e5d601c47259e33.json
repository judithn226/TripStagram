{"ast":null,"code":"module.exports = {\n  accepted: 'Le champ :attribute doit être accepté.',\n  alpha: 'Le champ :attribute ne peut contenir que des caractères alphabétiques.',\n  alpha_dash: 'Le champ :attribute ne peut contenir que des caractères alphanumériques, des tirets et des underscores.',\n  alpha_num: 'Le champ :attribute ne peut contenir que des caractères alphanumériques.',\n  between: 'La longueur du champ :attribute doit être comprise entre :min and :max.',\n  confirmed: 'Le champ :attribute n\\'est pas confirmé.',\n  email: 'Le champ :attribute contient un format invalide.',\n  def: 'Le champ :attribute contient un attribut erroné.',\n  digits: 'Le champ :attribute doit être composé de :digits chiffres.',\n  digits_between: 'Le champ :attribute doit contenir entre :min et :max chiffres.',\n  different: 'Les champs :attribute et :different doivent être différents.',\n  in: 'Le champ :attribute est invalide.',\n  integer: 'Le champ :attribute doit être un entier.',\n  hex: 'Le champ :attribute doit être au format hexadécimal.',\n  min: {\n    numeric: 'Le champ :attribute doit être supérieur à :min.',\n    string: 'Le champ :attribute doit contenir plus de :min caractères.'\n  },\n  max: {\n    numeric: 'Le champ :attribute doit être inférieur à :max.',\n    string: 'Le champ :attribute doit contenir moins de :max caractères.'\n  },\n  not_in: 'Le champ :attribute est invalide.',\n  numeric: 'Le champ :attribute doit être un chiffre.',\n  present: 'Le champ :attribute doit être présent (mais peut être vide).',\n  required: 'Le champ :attribute est requis.',\n  required_if: 'Le champ :attribute est requis quand :other est :value.',\n  same: 'Les champs :attribute et :same doivent correspondre.',\n  size: {\n    numeric: 'Le champ :attribute doit être égal à :size.',\n    string: 'Le champ :attribute doit contenir :size caractères.'\n  },\n  url: 'Le format du champ :attribute est invalide.',\n  regex: 'Le format du champ :attribute est invalide.',\n  attributes: {}\n};","map":{"version":3,"sources":["/Users/victoriablackburn/TripStagram/client/node_modules/react-form-input-validation/node_modules/validatorjs/src/lang/fr.js"],"names":["module","exports","accepted","alpha","alpha_dash","alpha_num","between","confirmed","email","def","digits","digits_between","different","in","integer","hex","min","numeric","string","max","not_in","present","required","required_if","same","size","url","regex","attributes"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,wCADK;AAEfC,EAAAA,KAAK,EAAE,wEAFQ;AAGfC,EAAAA,UAAU,EAAE,yGAHG;AAIfC,EAAAA,SAAS,EAAE,0EAJI;AAKfC,EAAAA,OAAO,EAAE,yEALM;AAMfC,EAAAA,SAAS,EAAE,0CANI;AAOfC,EAAAA,KAAK,EAAE,kDAPQ;AAQfC,EAAAA,GAAG,EAAE,kDARU;AASfC,EAAAA,MAAM,EAAE,4DATO;AAUfC,EAAAA,cAAc,EAAE,gEAVD;AAWfC,EAAAA,SAAS,EAAE,8DAXI;AAYfC,EAAAA,EAAE,EAAE,mCAZW;AAafC,EAAAA,OAAO,EAAE,0CAbM;AAcfC,EAAAA,GAAG,EAAE,sDAdU;AAefC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,iDADN;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAfU;AAmBfC,EAAAA,GAAG,EAAE;AACHF,IAAAA,OAAO,EAAE,iDADN;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAnBU;AAuBfE,EAAAA,MAAM,EAAE,mCAvBO;AAwBfH,EAAAA,OAAO,EAAE,2CAxBM;AAyBfI,EAAAA,OAAO,EAAE,8DAzBM;AA0BfC,EAAAA,QAAQ,EAAE,iCA1BK;AA2BfC,EAAAA,WAAW,EAAE,yDA3BE;AA4BfC,EAAAA,IAAI,EAAE,sDA5BS;AA6BfC,EAAAA,IAAI,EAAE;AACJR,IAAAA,OAAO,EAAE,6CADL;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GA7BS;AAiCfQ,EAAAA,GAAG,EAAE,6CAjCU;AAkCfC,EAAAA,KAAK,EAAE,6CAlCQ;AAmCfC,EAAAA,UAAU,EAAE;AAnCG,CAAjB","sourcesContent":["module.exports = {\n  accepted: 'Le champ :attribute doit être accepté.',\n  alpha: 'Le champ :attribute ne peut contenir que des caractères alphabétiques.',\n  alpha_dash: 'Le champ :attribute ne peut contenir que des caractères alphanumériques, des tirets et des underscores.',\n  alpha_num: 'Le champ :attribute ne peut contenir que des caractères alphanumériques.',\n  between: 'La longueur du champ :attribute doit être comprise entre :min and :max.',\n  confirmed: 'Le champ :attribute n\\'est pas confirmé.',\n  email: 'Le champ :attribute contient un format invalide.',\n  def: 'Le champ :attribute contient un attribut erroné.',\n  digits: 'Le champ :attribute doit être composé de :digits chiffres.',\n  digits_between: 'Le champ :attribute doit contenir entre :min et :max chiffres.',\n  different: 'Les champs :attribute et :different doivent être différents.',\n  in: 'Le champ :attribute est invalide.',\n  integer: 'Le champ :attribute doit être un entier.',\n  hex: 'Le champ :attribute doit être au format hexadécimal.',\n  min: {\n    numeric: 'Le champ :attribute doit être supérieur à :min.',\n    string: 'Le champ :attribute doit contenir plus de :min caractères.'\n  },\n  max: {\n    numeric: 'Le champ :attribute doit être inférieur à :max.',\n    string: 'Le champ :attribute doit contenir moins de :max caractères.'\n  },\n  not_in: 'Le champ :attribute est invalide.',\n  numeric: 'Le champ :attribute doit être un chiffre.',\n  present: 'Le champ :attribute doit être présent (mais peut être vide).',\n  required: 'Le champ :attribute est requis.',\n  required_if: 'Le champ :attribute est requis quand :other est :value.',\n  same: 'Les champs :attribute et :same doivent correspondre.',\n  size: {\n    numeric: 'Le champ :attribute doit être égal à :size.',\n    string: 'Le champ :attribute doit contenir :size caractères.'\n  },\n  url: 'Le format du champ :attribute est invalide.',\n  regex: 'Le format du champ :attribute est invalide.',\n  attributes: {}\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"// optional / simple context binding\nvar aFunction = require('./$.a-function');\n\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n\n  return function ()\n  /* ...args */\n  {\n    return fn.apply(that, arguments);\n  };\n};","map":{"version":3,"sources":["/Users/victoriablackburn/TripStagram/client/node_modules/react-bootstrap-validation/node_modules/core-js/library/modules/$.ctx.js"],"names":["aFunction","require","module","exports","fn","that","length","undefined","a","call","b","c","apply","arguments"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,EAAT,EAAaC,IAAb,EAAmBC,MAAnB,EAA0B;AACzCN,EAAAA,SAAS,CAACI,EAAD,CAAT;AACA,MAAGC,IAAI,KAAKE,SAAZ,EAAsB,OAAOH,EAAP;;AACtB,UAAOE,MAAP;AACE,SAAK,CAAL;AAAQ,aAAO,UAASE,CAAT,EAAW;AACxB,eAAOJ,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,CAAP;AACD,OAFO;;AAGR,SAAK,CAAL;AAAQ,aAAO,UAASA,CAAT,EAAYE,CAAZ,EAAc;AAC3B,eAAON,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,EAAiBE,CAAjB,CAAP;AACD,OAFO;;AAGR,SAAK,CAAL;AAAQ,aAAO,UAASF,CAAT,EAAYE,CAAZ,EAAeC,CAAf,EAAiB;AAC9B,eAAOP,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,EAAiBE,CAAjB,EAAoBC,CAApB,CAAP;AACD,OAFO;AAPV;;AAWA,SAAO;AAAS;AAAc;AAC5B,WAAOP,EAAE,CAACQ,KAAH,CAASP,IAAT,EAAeQ,SAAf,CAAP;AACD,GAFD;AAGD,CAjBD","sourcesContent":["// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};"]},"metadata":{},"sourceType":"script"}
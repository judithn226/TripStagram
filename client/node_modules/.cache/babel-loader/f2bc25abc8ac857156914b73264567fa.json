{"ast":null,"code":"// 19.1.2.1 Object.assign(target, source, ...)\nvar $ = require('./$'),\n    toObject = require('./$.to-object'),\n    IObject = require('./$.iobject'); // should work with symbols and should have deterministic property order (V8 bug)\n\n\nmodule.exports = require('./$.fails')(function () {\n  var a = Object.assign,\n      A = {},\n      B = {},\n      S = Symbol(),\n      K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = toObject(target),\n      $$ = arguments,\n      $$len = $$.length,\n      index = 1,\n      getKeys = $.getKeys,\n      getSymbols = $.getSymbols,\n      isEnum = $.isEnum;\n\n  while ($$len > index) {\n    var S = IObject($$[index++]),\n        keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),\n        length = keys.length,\n        j = 0,\n        key;\n\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  }\n\n  return T;\n} : Object.assign;","map":{"version":3,"sources":["/Users/victoriablackburn/TripStagram/client/node_modules/react-bootstrap-validation/node_modules/core-js/library/modules/$.object-assign.js"],"names":["$","require","toObject","IObject","module","exports","a","Object","assign","A","B","S","Symbol","K","split","forEach","k","keys","join","target","source","T","$$","arguments","$$len","length","index","getKeys","getSymbols","isEnum","concat","j","key","call"],"mappings":"AAAA;AACA,IAAIA,CAAC,GAAUC,OAAO,CAAC,KAAD,CAAtB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CADtB;AAAA,IAEIE,OAAO,GAAIF,OAAO,CAAC,aAAD,CAFtB,C,CAIA;;;AACAG,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAAC,WAAD,CAAP,CAAqB,YAAU;AAC9C,MAAIK,CAAC,GAAGC,MAAM,CAACC,MAAf;AAAA,MACIC,CAAC,GAAG,EADR;AAAA,MAEIC,CAAC,GAAG,EAFR;AAAA,MAGIC,CAAC,GAAGC,MAAM,EAHd;AAAA,MAIIC,CAAC,GAAG,sBAJR;AAKAJ,EAAAA,CAAC,CAACE,CAAD,CAAD,GAAO,CAAP;AACAE,EAAAA,CAAC,CAACC,KAAF,CAAQ,EAAR,EAAYC,OAAZ,CAAoB,UAASC,CAAT,EAAW;AAAEN,IAAAA,CAAC,CAACM,CAAD,CAAD,GAAOA,CAAP;AAAW,GAA5C;AACA,SAAOV,CAAC,CAAC,EAAD,EAAKG,CAAL,CAAD,CAASE,CAAT,KAAe,CAAf,IAAoBJ,MAAM,CAACU,IAAP,CAAYX,CAAC,CAAC,EAAD,EAAKI,CAAL,CAAb,EAAsBQ,IAAtB,CAA2B,EAA3B,KAAkCL,CAA7D;AACD,CATgB,IASZ,SAASL,MAAT,CAAgBW,MAAhB,EAAwBC,MAAxB,EAA+B;AAAE;AACpC,MAAIC,CAAC,GAAOnB,QAAQ,CAACiB,MAAD,CAApB;AAAA,MACIG,EAAE,GAAMC,SADZ;AAAA,MAEIC,KAAK,GAAGF,EAAE,CAACG,MAFf;AAAA,MAGIC,KAAK,GAAG,CAHZ;AAAA,MAIIC,OAAO,GAAM3B,CAAC,CAAC2B,OAJnB;AAAA,MAKIC,UAAU,GAAG5B,CAAC,CAAC4B,UALnB;AAAA,MAMIC,MAAM,GAAO7B,CAAC,CAAC6B,MANnB;;AAOA,SAAML,KAAK,GAAGE,KAAd,EAAoB;AAClB,QAAIf,CAAC,GAAQR,OAAO,CAACmB,EAAE,CAACI,KAAK,EAAN,CAAH,CAApB;AAAA,QACIT,IAAI,GAAKW,UAAU,GAAGD,OAAO,CAAChB,CAAD,CAAP,CAAWmB,MAAX,CAAkBF,UAAU,CAACjB,CAAD,CAA5B,CAAH,GAAsCgB,OAAO,CAAChB,CAAD,CADpE;AAAA,QAEIc,MAAM,GAAGR,IAAI,CAACQ,MAFlB;AAAA,QAGIM,CAAC,GAAQ,CAHb;AAAA,QAIIC,GAJJ;;AAKA,WAAMP,MAAM,GAAGM,CAAf,EAAiB,IAAGF,MAAM,CAACI,IAAP,CAAYtB,CAAZ,EAAeqB,GAAG,GAAGf,IAAI,CAACc,CAAC,EAAF,CAAzB,CAAH,EAAmCV,CAAC,CAACW,GAAD,CAAD,GAASrB,CAAC,CAACqB,GAAD,CAAV;AACrD;;AACD,SAAOX,CAAP;AACD,CA1BgB,GA0Bbd,MAAM,CAACC,MA1BX","sourcesContent":["// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;"]},"metadata":{},"sourceType":"script"}